/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/8.14/userguide/userguide.html
 */

// Apply the java plugin to add support for Java
plugins {
  id 'java'
  id 'application'
  id 'com.bmuschko.docker-java-application' version '9.4.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    mavenLocal()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    implementation 'org.slf4j:slf4j-api:2.0.17'
    implementation 'org.cloudsimplus:cloudsimplus:8.5.5'
    implementation 'com.typesafe:config:1.4.3'
    implementation 'org.yaml:snakeyaml:2.4'
    implementation 'net.sf.py4j:py4j:0.10.9.9'
    implementation 'ch.qos.logback:logback-classic:1.5.18'
    implementation 'org.apache.commons:commons-collections4:4.5.0-M3'
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation 'org.postgresql:postgresql:42.7.5'
    implementation 'org.hamcrest:hamcrest:3.0'

    // Lombok - Reduces boilerplate code
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testImplementation 'junit:junit:4.13.2'
    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'com.github.stefanbirkner:system-lambda:1.2.1'

    // Lombok for tests too
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

application {
    mainClass = 'giu.edu.cspg.Main'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
        showStandardStreams = true
    }
    
    // Add JVM arguments to allow module access
    jvmArgs = [
        '--add-opens=java.base/java.util=ALL-UNNAMED',
        '--add-opens=java.base/java.lang=ALL-UNNAMED',
        '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
        '--add-opens=java.base/java.io=ALL-UNNAMED',
        '--add-opens=java.base/java.net=ALL-UNNAMED',
        '--add-opens=java.base/sun.security.util=ALL-UNNAMED',
        '--add-opens=java.base/java.util.concurrent=ALL-UNNAMED',
        '--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED',
        '--add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED'
    ]
}
